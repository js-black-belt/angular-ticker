"use strict";angular.module("jsbb.angularTicker",[]).run(["$rootScope","TickerSrv",function(a,b){a.registerTickerTask=function(a,c,d,e,f){b.register(a,c,d,e,f),this.$on("$destroy",function(){b.unregister(a)})},a.unregisterTickerTask=b.unregister,a.$origNew=a.$new,a.$new=function(b,c){var d=this.$origNew(b,c);return b&&(d.unregisterTickerTask=a.unregisterTickerTask,d.registerTickerTask=a.registerTickerTask),d}}]),angular.module("jsbb.angularTicker").provider("TickerSrv",function(){function a(a){var d=function(a){a.delay=a.interval,a.isPending=!1},e=function(a){a.isPending||(a.isPending=!0,a.tick().then(function(){d(a)},function(){d(a)}))},f=function(a){a.tick(),d(a)},g=function(){angular.forEach(b,function(a){if(a.delay-=c,a.delay<=0)try{a.isLinear?e(a):f(a)}catch(b){throw d(a),b}})},h=function(){a(g,c),g()};this.register=function(a,c,d,e,f){void 0===d&&(d=1e3),void 0===e&&(e=0),void 0===f&&(f=!0),b[a]={id:a,tick:c,interval:d,delay:e,isLinear:f,isPending:!1}},this.unregister=function(a){delete b[a]},this.unregisterAll=function(){b={}},h()}var b={},c=1e3;this.setInterval=function(a){if(!angular.isNumber(a))throw new Error("TickerSrv: expected interval to be numeric, got "+a);c=a},this.getInterval=function(){return c},this.$get=["$interval",function(b){return new a(b)}]});